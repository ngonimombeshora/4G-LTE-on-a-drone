################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under
# the terms found in the LICENSE file in the root of this source tree.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################

# file build_helper
# brief
# author Laurent Thomas, Lionel GAUTHIER
#
#######################################
SCRIPT=$(readlink -f ${BASH_SOURCE})
THIS_SCRIPT_PATH=`dirname $SCRIPT`
source $THIS_SCRIPT_PATH/build_helper
#-------------------------------------------------------------------------------
install_liblfds7.1.0_from_source() {
  if [ $1 -gt 0 ]; then
    OPTION="-y"
  else
    OPTION=""
  fi


  if [ $1 -eq 0 ]; then
    read -p "Do you want to install liblfds7.1.0 ? <y/N> " prompt
  else
    prompt='y'
  fi
  if [[ $prompt =~ [yY](es)* ]]
  then
    echo "Install liblfds7.1.0 from source"
    # Compilers, generators, ...
    if [[ "$OS_DISTRO" == "debian" ]]
    then
      $SUDO $INSTALLER install -y $OPTION build-essential
    else
      $SUDO $INSTALLER install -y $OPTION make gcc
    fi
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    cd /tmp
    echo "Downloading liblfds7.1.0 archive"
    $SUDO rm -rf /tmp/liblfds*
    git clone https://github.com/liblfds/liblfds.git
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    cd liblfds/liblfds/liblfds7.1.0/liblfds710/build/gcc_gnumake
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    #make so_rel # do a selector
    make so_dbg
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    $SUDO rm -f /usr/local/lib//liblfds710.so
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    $SUDO make so_install
    ret=$?;[[ $ret -ne 0 ]] && return $ret
    $SUDO rm -rf /tmp/liblfds*
  fi
  return 0
}

